---
services:
  openldap:
    image: osixia/openldap:1.5.0
    ports:
      - 1389:389
    hostname: openldap
    container_name: openldap
    environment:
      LDAP_ORGANISATION: example
      LDAP_DOMAIN: example.org
      LDAP_BASE_DN: dc=example,dc=org
    command: "--copy-service"
    volumes:
      - ./ldap_users:/container/service/slapd/assets/config/bootstrap/ldif/custom

  phpldapadmin:
    image: osixia/phpldapadmin:0.9.0
    ports:
      - 8080:80
    container_name: phpldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: openldap
      PHPLDAPADMIN_HTTPS: false

  zookeeper1:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper1
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2889:3889;zookeeper3:2890:3890
    volumes:
      - ./zookeeperDir/zookeeper1/data:/var/lib/zookeeper/data
      - ./zookeeperDir/zookeeper1/log:/var/lib/zookeeper/log

  zookeeper2:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper2
    ports:
      - 2182:2182
      - 2889:2889
      - 3889:3889
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2889:3889;zookeeper3:2890:3890
    volumes:
      - ./zookeeperDir/zookeeper2/data:/var/lib/zookeeper/data
      - ./zookeeperDir/zookeeper2/log:/var/lib/zookeeper/log

  zookeeper3:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper3
    ports:
      - 2183:2183
      - 2890:2890
      - 3890:3890
    environment:
      ZOOKEEPER_CLIENT_PORT: 2183
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2889:3889;zookeeper3:2890:3890
    volumes:
      - ./zookeeperDir/zookeeper3/data:/var/lib/zookeeper/data
      - ./zookeeperDir/zookeeper3/log:/var/lib/zookeeper/log

  kafka1:
    image: confluentinc/cp-server:7.2.1
    container_name: kafka1
    ports:
      - 8090:8090
      - 9092:9092
      - 9093:9093
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2182,zookeeper3:2183
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:SASL_PLAINTEXT,TOKEN:SASL_PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093,TOKEN://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://kafka1:9093,TOKEN://kafka1:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      KAFKA_SUPER_USERS: User:alice;User:ANONYMOUS

      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN, OAUTHBEARER

      # Configure LDAP listener
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required;

      # Configure TOKEN listener for Confluent Platform components and impersonation
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        publicKeyPath="/tmp/conf/public.pem";

      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
      
      # Metrics Reporter
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:10092,kafka3:11092

      # MDS
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BEARER
      KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: http://0.0.0.0:8090
      KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: http://kafka1:8090

      # Configure RBAC token server (authentication)
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS: 3600000
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM: RS256
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH: /tmp/conf/keypair.pem


      # Configure Confluent Server Authorizer
      KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
      KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS: CONFLUENT,ZK_ACL
      
       # Configure MDS to talk to AD/LDAP
      KAFKA_LDAP_COM_SUN_JNDI_LDAP_READ_TIMEOUT: 3000
      KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://openldap:389

       # Authenticate to LDAP
      KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=example,dc=org
      KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
      KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple

      # Locate LDAP users and groups
      KAFKA_LDAP_SEARCH_MODE: GROUPS
      KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=example,dc=org
      KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: memberUid
      KAFKA_LDAP_GROUP_OBJECT_CLASS: posixGroup
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=users,dc=example,dc=org
      KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=example,dc=org
      KAFKA_LDAP_USER_NAME_ATTRIBUTE: uid
      KAFKA_LDAP_USER_OBJECT_CLASS: inetOrgPerson
      KAFKA_LDAP_USER_SEARCH_SCOPE: 2
    volumes:
      - ./kafkaDir/kafka1/data:/var/lib/kafka/data
      - ./keypair:/tmp/conf
      - ./prop:/tmp/prop
  
  kafka2:
    image: confluentinc/cp-server:7.2.1
    container_name: kafka2
    ports:
      - 8091:8091
      - 10092:10092
      - 10093:10093
      - 10094:10094
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2182,zookeeper3:2183
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:SASL_PLAINTEXT,TOKEN:SASL_PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:10092,EXTERNAL://0.0.0.0:10093,TOKEN://0.0.0.0:10094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:10092,EXTERNAL://kafka2:10093,TOKEN://kafka2:10094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      KAFKA_SUPER_USERS: User:alice;User:ANONYMOUS

      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN, OAUTHBEARER

      # Configure LDAP listener
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required;

      # Configure TOKEN listener for Confluent Platform components and impersonation
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        publicKeyPath="/tmp/conf/public.pem";

      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2

      # Metrics Reporter
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:10092,kafka3:11092
      
      # MDS
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BEARER
      KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: http://0.0.0.0:8091
      KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: http://kafka2:8091

      # Configure RBAC token server (authentication)
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS: 3600000
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM: RS256
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH: /tmp/conf/keypair.pem


      # Configure Confluent Server Authorizer
      KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
      KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS: CONFLUENT,ZK_ACL
      
       # Configure MDS to talk to AD/LDAP
      KAFKA_LDAP_COM_SUN_JNDI_LDAP_READ_TIMEOUT: 3000
      KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://openldap:389

       # Authenticate to LDAP
      KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=example,dc=org
      KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
      KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple

      # Locate LDAP users and groups
      KAFKA_LDAP_SEARCH_MODE: GROUPS
      KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=example,dc=org
      KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: memberUid
      KAFKA_LDAP_GROUP_OBJECT_CLASS: posixGroup
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=users,dc=example,dc=org
      KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=example,dc=org
      KAFKA_LDAP_USER_NAME_ATTRIBUTE: uid
      KAFKA_LDAP_USER_OBJECT_CLASS: inetOrgPerson
      KAFKA_LDAP_USER_SEARCH_SCOPE: 2
    volumes:
      - ./kafkaDir/kafka2/data:/var/lib/kafka/data
      - ./keypair:/tmp/conf
      - ./prop:/tmp/prop
  
  kafka3:
    image: confluentinc/cp-server:7.2.1
    container_name: kafka3
    ports:
      - 8092:8092
      - 11092:11092
      - 11093:11093
      - 11094:11094
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2182,zookeeper3:2183
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:SASL_PLAINTEXT,TOKEN:SASL_PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:11092,EXTERNAL://0.0.0.0:11093,TOKEN://0.0.0.0:11094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:11092,EXTERNAL://kafka3:11093,TOKEN://kafka3:11094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      KAFKA_SUPER_USERS: User:alice;User:ANONYMOUS

      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN, OAUTHBEARER

      # Configure LDAP listener
      KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
      KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required;

      # Configure TOKEN listener for Confluent Platform components and impersonation
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
      KAFKA_LISTENER_NAME_TOKEN_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        publicKeyPath="/tmp/conf/public.pem";

      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2

      # Metrics Reporter
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:10092,kafka3:11092
      
      # MDS
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BEARER
      KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: http://0.0.0.0:8092
      KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: http://kafka3:8092

      # Configure RBAC token server (authentication)
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS: 3600000
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM: RS256
      KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH: /tmp/conf/keypair.pem


      # Configure Confluent Server Authorizer
      KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
      KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS: CONFLUENT,ZK_ACL
      
       # Configure MDS to talk to AD/LDAP
      KAFKA_LDAP_COM_SUN_JNDI_LDAP_READ_TIMEOUT: 3000
      KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://openldap:389

       # Authenticate to LDAP
      KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=example,dc=org
      KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
      KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple

      # Locate LDAP users and groups
      KAFKA_LDAP_SEARCH_MODE: GROUPS
      KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=example,dc=org
      KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: memberUid
      KAFKA_LDAP_GROUP_OBJECT_CLASS: posixGroup
      KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=users,dc=example,dc=org
      KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=example,dc=org
      KAFKA_LDAP_USER_NAME_ATTRIBUTE: uid
      KAFKA_LDAP_USER_OBJECT_CLASS: inetOrgPerson
      KAFKA_LDAP_USER_SEARCH_SCOPE: 2
    volumes:
      - ./kafkaDir/kafka3/data:/var/lib/kafka/data
      - ./keypair:/tmp/conf
      - ./prop:/tmp/prop

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.2.1
    container_name: control-center
    ports:
      - 9021:9021
    environment:
      CUB_CLASSPATH: '/usr/share/java/confluent-control-center/*:/usr/share/java/rest-utils/*:/usr/share/java/confluent-common/*:/usr/share/java/confluent-security/kafka-rest/*:/usr/share/java/kafka-rest/:/usr/share/java/cp-base-new/*'

      # Token 인증과 연결
      CONTROL_CENTER_BOOTSTRAP_SERVERS: SASL_PLAINTEXT://kafka1:9094,SASL_PLAINTEXT://kafka2:10094,SASL_PLAINTEXT://kafka3:11094
      CONTROL_CENTER_REPLICATION_FACTOR: 2
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 2

      # Control Center uses Kafka Streams to process metrics
      CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONTROL_CENTER_STREAMS_SASL_MECHANISM: OAUTHBEARER
      CONTROL_CENTER_STREAMS_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
      CONTROL_CENTER_STREAMS_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        username="alice" \
        password="alice-secret" \
        metadataServerUrls="http://kafka1:8090,http://kafka2:8091,http://kafka3:8092";

      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 2
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 2
      CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 2
      CONTROL_CENTER_METRICS_TOPIC_PARTITIONS: 2

      # Schema Registry
      CONTROL_CENTER_SCHEMA_REGISTRY_SR1_URL: http://schemaregistry:8081

      # Connect
      CONTROL_CENTER_CONNECT_CONNECT1_CLUSTER: http://connect:8083

      # ksqlDB
      # Communication between Control Center and ksqlDB Docker containers
      CONTROL_CENTER_KSQL_HOGNOD_URL: http://ksqldb-server:8088
      CONTROL_CENTER_KSQL_HOGNOD_ADVERTISED_URL: http://localhost:8088

      # RBAC
      CONTROL_CENTER_REST_AUTHENTICATION_METHOD: BEARER
      PUBLIC_KEY_PATH: /tmp/conf/public.pem

      # Used by Control Center to connect to MDS to verify tokens and authenticate clients
      CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://kafka1:8090,http://kafka2:8091,http://kafka3:8092
      CONFLUENT_METADATA_BASIC_AUTH_USER_INFO: alice:alice-secret
    volumes:
      - ./keypair:/tmp/conf

  schemaregistry:
    image: confluentinc/cp-schema-registry:7.2.1
    hostname: schemaregistry
    container_name: schemaregistry
    ports:
      - 8081:8081
    environment:
      CUB_CLASSPATH: '/usr/share/java/confluent-security/schema-registry/*:/usr/share/java/schema-registry/*:/usr/share/java/cp-base-new/*'
      
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry

      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka1:9094,kafka2:10094,kafka3:11094
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_PLAINTEXT

      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: OAUTHBEARER
      SCHEMA_REGISTRY_KAFKASTORE_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        username="alice" \
        password="alice-secret" \
        metadataServerUrls="http://kafka1:8090,http://kafka2:8091,http://kafka3:8092";

      # Enable bearer token authentication which allows the identity of the Schema Registry end user to be propagated to Kafka for authorization
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_RESOURCE_EXTENSION_CLASS: io.confluent.kafka.schemaregistry.security.SchemaRegistrySecurityResourceExtension
      SCHEMA_REGISTRY_CONFLUENT_SCHEMA_REGISTRY_AUTHORIZER_CLASS: io.confluent.kafka.schemaregistry.security.authorizer.rbac.RbacAuthorizer
      SCHEMA_REGISTRY_REST_SERVLET_INITIALIZOR_CLASSES: io.confluent.common.security.jetty.initializer.InstallBearerOrBasicSecurityHandler
      SCHEMA_REGISTRY_PUBLIC_KEY_PATH: /tmp/conf/public.pem

      # Used by Schema Registry to connect to MDS to authenticate and authorize clients
      SCHEMA_REGISTRY_CONFLUENT_METADATA_HTTP_AUTH_CREDENTIALS_PROVIDER: BASIC
      SCHEMA_REGISTRY_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://kafka1:8090,http://kafka2:8091,http://kafka3:8092
      SCHEMA_REGISTRY_CONFLUENT_METADATA_BASIC_AUTH_USER_INFO: alice:alice-secret
    volumes:
      - ./keypair:/tmp/conf

  connect:
    image: confluentinc/cp-server-connect:7.2.1
    hostname: connect
    container_name: connect
    ports:
      - 8083:8083
    environment:
      CUB_CLASSPATH: '/usr/share/java/confluent-security/connect/*:/usr/share/java/kafka/*:/usr/share/java/cp-base-new/*'

      # general settings
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-cluster
      # configs storage topic
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 2
      # offsets storage topic and settings
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 2
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      # status storage topic
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 2

      # Default to Json converters:
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter

      # Connect to broker
      CONNECT_BOOTSTRAP_SERVERS: kafka1:9094,kafka2:10094,kafka3:11094
      CONNECT_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONNECT_SASL_MECHANISM: OAUTHBEARER
      CONNECT_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
      CONNECT_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        username="alice" \
        password="alice-secret" \
        metadataServerUrls="http://kafka1:8090,http://kafka2:8091,http://kafka3:8092";

      # Allow overriding configs on the connector level
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All

      # Default producer configs
      CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONNECT_PRODUCER_SASL_MECHANISM: OAUTHBEARER
      CONNECT_PRODUCER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
      CONNECT_PRODUCER_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        username="alice" \
        password="alice-secret" \
        metadataServerUrls="http://kafka1:8090,http://kafka2:8091,http://kafka3:8092";
      # Default consumer configs
      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONNECT_CONSUMER_SASL_MECHANISM: OAUTHBEARER
      CONNECT_CONSUMER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
      CONNECT_CONSUMER_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        username="alice" \
        password="alice-secret" \
        metadataServerUrls="http://kafka1:8090,http://kafka2:8091,http://kafka3:8092";
      # Default admin config
      CONNECT_ADMIN_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONNECT_ADMIN_SASL_MECHANISM: OAUTHBEARER
      CONNECT_ADMIN_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
      CONNECT_ADMIN_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        username="alice" \
        password="alice-secret" \
        metadataServerUrls="http://kafka1:8090,http://kafka2:8091,http://kafka3:8092";
      #Load confluent plugins
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"

      # ============================== RBAC ========================================
      CONNECT_REST_EXTENSION_CLASSES: io.confluent.connect.security.ConnectSecurityExtension
      CONNECT_REST_SERVLET_INITIALIZOR_CLASSES: io.confluent.common.security.jetty.initializer.InstallBearerOrBasicSecurityHandler
      CONNECT_PUBLIC_KEY_PATH: /tmp/conf/public.pem
      CONNECT_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://kafka1:8090,http://kafka2:8091,http://kafka3:8092
      CONNECT_CONFLUENT_METADATA_BASIC_AUTH_USER_INFO: alice:alice-secret
      CONNECT_CONFLUENT_METADATA_HTTP_AUTH_CREDENTIALS_PROVIDER: BASIC
    volumes:
      - ./keypair:/tmp/conf

  restproxy:
    image: confluentinc/cp-kafka-rest:7.2.1
    container_name: restproxy
    ports:
      - 8082:8082
    environment:
      KAFKA_REST_HOST_NAME: restproxy
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka1:9094,kafka2:10094,kafka3:11094
      KAFKA_REST_LISTENER: http://0.0.0.0:8082

      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schemaregistry:8081

      CUB_CLASSPATH: '/usr/share/java/confluent-security/kafka-rest/*:/usr/share/java/kafka-rest/*:/usr/share/java/cp-base-new/*'

      # Enable OAuth for REST Proxy's embedded Kafka client that accesses and manages consumer groups and topics
      KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KAFKA_REST_CLIENT_SASL_MECHANISM: OAUTHBEARER
      KAFKA_REST_CLIENT_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
      KAFKA_REST_CLIENT_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        username="alice" \
        password="alice-secret" \
        metadataServerUrls="http://kafka1:8090,http://kafka2:8091,http://kafka3:8092";

      # Enable bearer token authentication which allows the identity of the REST Proxy end user to be propagated to Kafka for authorization
      KAFKA_REST_KAFKA_REST_RESOURCE_EXTENSION_CLASS: io.confluent.kafkarest.security.KafkaRestSecurityResourceExtension
      KAFKA_REST_REST_SERVLET_INITIALIZOR_CLASSES: io.confluent.common.security.jetty.initializer.InstallBearerOrBasicSecurityHandler
      KAFKA_REST_PUBLIC_KEY_PATH: /tmp/conf/public.pem

      # Used by REST Proxy to connect to MDS to verify tokens and authenticate clients
      KAFKA_REST_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000
      KAFKA_REST_CLIENT_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000
      KAFKA_REST_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://kafka1:8090,http://kafka2:8091,http://kafka3:8092
      KAFKA_REST_CONFLUENT_METADATA_HTTP_AUTH_CREDENTIALS_PROVIDER: BASIC
      KAFKA_REST_CONFLUENT_METADATA_BASIC_AUTH_USER_INFO: alice:alice-secret
    volumes:
      - ./keypair:/tmp/conf

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.2.1
    container_name: ksqldb-server
    ports:
      - 8088:8088
    environment:
      CUB_CLASSPATH: '/usr/share/java/confluent-security/ksql/*:/usr/share/java/ksqldb-server/*:/usr/share/java/cp-base-new/*'
      KSQL_KSQL_SERVICE_ID: ksql-cluster
      KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 2
      KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: 2
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 2

      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

      KSQL_BOOTSTRAP_SERVERS: kafka1:9094,kafka2:10094,kafka3:11094
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0

      KSQL_KSQL_SECURITY_EXTENSION_CLASS: io.confluent.ksql.security.KsqlConfluentSecurityExtension

      # Enable bearer token authentication which allows the identity of the ksqlDB end user to be propagated to Kafka for authorization
      KSQL_KSQL_AUTHENTICATION_PLUGIN_CLASS: io.confluent.ksql.security.VertxBearerOrBasicAuthenticationPlugin
      KSQL_PUBLIC_KEY_PATH: /tmp/conf/public.pem

      # Used by ksqlDB's REST layer to connect to MDS to verify tokens and authenticate clients
      KSQL_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://kafka1:8090,http://kafka2:8091,http://kafka3:8092
      KSQL_CONFLUENT_METADATA_HTTP_AUTH_CREDENTIALS_PROVIDER: BASIC
      KSQL_CONFLUENT_METADATA_BASIC_AUTH_CREDENTIALS_PROVIDER: USER_INFO
      KSQL_CONFLUENT_METADATA_BASIC_AUTH_USER_INFO: alice:alice-secret

      # Schema Registry using HTTPS
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schemaregistry:8081

      # Enable OAuth for ksqlDB's embedded Kafka clients that access and manage consumer groups and topics
      KSQL_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KSQL_SASL_MECHANISM: OAUTHBEARER
      KSQL_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
      KSQL_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        username="alice" \
        password="alice-secret" \
        metadataServerUrls="http://kafka1:8090,http://kafka2:8091,http://kafka3:8092";

      KSQL_KSQL_SCHEMA_REGISTRY_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
      KSQL_KSQL_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: alice:alice-secret

      # Confluent Monitoring Interceptors for Control Center streams monitoring
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KSQL_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: OAUTHBEARER
      KSQL_CONFLUENT_MONITORING_INTERCEPTOR_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.clients.plugins.auth.token.TokenUserLoginCallbackHandler
      KSQL_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        username="alice" \
        password="alice-secret" \
        metadataServerUrls="http://kafka1:8090,http://kafka2:8091,http://kafka3:8092";
    volumes:
      - ./keypair:/tmp/conf
